<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <title>Biblioteca</title>
    <center><h1 id="title"><b>Biblioteca - Admin Panel</b></h1></center>
    <style>
        #starter {
          margin-top: 20px;
          margin-left: 10px;
          margin-bottom: 10px;
        }
        #btnVisCorsi {
          margin-top: 20px;
          margin-left: 10px;
          margin-bottom: 10px;
        }
        #btnTotaleIncassi {
          margin-top: 20px;
          margin-left: 10px;
          margin-bottom: 10px;
        }
        #title {
          margin-top: 10px;
          margin-left: 10px;
        }
    </style>
</head>
<body>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#aggiungiLibro" id="starter">
        Cliccami per aggiungere un libro
    </button>
    <button type="button" class="btn btn-primary" id="starter" onclick="elencoLibriInPrestito()">
        Cliccami per visualizzare i libri in prestito
    </button>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#inputRestituzione" id="starter" ">
        Cliccami per restituire i libri in prestito
    </button>
    <!-- Modal -->
    <div class="modal fade" id="aggiungiLibro" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLongTitle">Aggiungi un libro</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
    <!-- Form per aggiungere un libro :) -->

    <form>
        <div class="form-row">
          <div class="form-group col-md-6">
            <label for="inputTitolo">Titolo</label>
            <input type="text" class="form-control" id="inputTitolo" placeholder="Titolo">
          </div>
          <div class="form-group col-md-6">
            <label for="inputAutore">Autore</label>
            <input type="text" class="form-control" id="inputAutore" placeholder="Autore">
          </div>
        </div>
        <div class="form-group">
          <label for="inputGenere">Genere</label>
          <input type="text" class="form-control" id="inputGenere" placeholder="Genere">
        </div>
        <div class="form-group">
          <label for="inputAnnoDiPubblicazione">Anno di pubblicazione</label>
          <input type="number" class="form-control" id="inputAnnoDiPubblicazione" placeholder="Anno di pubblicazione">
        </div>

        <!-- Prima qua il type era "submit", se ricapita cambiarlo a button che sennò funziona nulla :D -->
        <button type="button" class="btn btn-primary" onclick="aggiungiLibro()" id="btnInvio">Aggiungi</button>
      </form>

  </div>
  <div class="modal-footer">
  </div>
</div>
</div>
</div>
<p id="output"></p>

<!-- Modal -->
<div class="modal fade" id="inputRestituzione" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLongTitle">Scegli il libro da restituire:</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form>
              <div class="form-row">
              <div class="form-group col-md-6">
                  <label for="inputCorso">Scegli il libro da restituire: </label>
                  <select id="inputVisualizzazioneRestituzione" class="form-control">
                    <option selected>N/A</option>
                  </select>
              </div>
            </div>
              
            </form>

        </div>
        <div class="modal-footer">
        </div>
      </div>
    </div>
  </div>






<!-- JavaScript -->
<script>
    class Libro {
        constructor(titolo, autore, genere, annoPubblicazione, disponibile) {
            this.titolo = titolo, this.autore = autore, this.genere = genere, this.annoPubblicazione = annoPubblicazione, this.disponibile = disponibile;
            disponibile = true; // Ricontrollare questa dopo
        }
        // Ricontrollare disponibile in caso venga modificato in futuro
        disponibile() {
            if(disponibile = true)
                return alert("Libro disponibile");
            else
                return alert("Libro non disponibile");
        }
    }
    // Lettore ha il compito di gestire i prestiti dei libri da parte del lettore
    class Lettore {
        constructor(nome, cognome, numeroTessera) {
            this.nome = nome, this.cognome = cognome, this.numeroTessera = numeroTessera;
            this.prestiti = new Array(); // Se da errore ricontrollare se serve che venga messo nel costruttore
        }
        aggiungiPrestito(libro) {
            this.prestiti.push(libro);
        }
        // Poi ricontrollare questa funzione :)
        restituisciLibro(libro) {
            for(let i = 0; i < this.prestiti.length; i++) {
                const prestito = this.prestiti[i];
                if(prestito == libro)
                    libroRimosso = this.prestiti.pop(prestito);
            }
        }
    }
    class Biblioteca {
        constructor() {
            this.inventario = new Array();
            this.lettori = new Array();
            this.prestitiAttuali = new Array(); // Non ricordo se si può fare una cosa del genere, l' idea è quella di fornire 2 parametri obbligaotori. In caso dia errore ricontrollare.
        }
        aggiungiLibro(libro) {
            this.inventario.push(libro);
        }
        registraLettore(lettore) {
            this.lettori.push(lettore);
        }
        // Ricontrollare questa funzione che mica mi pare tanto giusta
        effettuaPrestito(lettore, libro) {
            this.prestitiAttuali.push({lettore, libro});
            libro.disponibile = false;
        }
        restituisciPrestito(lettore, libro) {
        //    let libroRimosso;
            this.prestitiAttuali.pop(libro);
            libro.disponibile = true;
                

        /*        const prestito = this.prestitiAttuali[i];
                if(prestito == libro)
                    prestitoRimosso = this.prestitiAttuali.splice(i, 1)[0];
            console.log(prestitoRimosso);
            libro.disponibile = true;
            }
        */
        }
        elencoLibriInPrestito() {
            return this.prestitiAttuali;
        }
    }
    // Creiamo la biblioteca, i lettori e dei libri
    let biblioteca = new Biblioteca();
    let lettore1 = new Lettore("Piero", "Angela", 1000);
    let lettore2 = new Lettore("Alberto", "Angela", 1001);
    let lettore3 = new Lettore("Carlo", "Corbella", 1002);
    let libro1 = new Libro("Potatoes", "Titti", "Horror", 2040, true);
    let libro2 = new Libro("Strawberries", "Titti", "Horror", 2041, true);
    let libro3 = new Libro("Chocolate", "Titti", "Romantico", 2042, true);
    // Registriamo i lettori
    biblioteca.registraLettore(lettore1);
    biblioteca.registraLettore(lettore2);
    biblioteca.registraLettore(lettore3);
    // Registriamo dei prestiti
    biblioteca.effettuaPrestito(lettore1, libro1)
    biblioteca.effettuaPrestito(lettore2, libro2);
    // Elenchiamo i libri in prestito qua almeno si vedono
    console.log(biblioteca.elencoLibriInPrestito());
    // Restituiamo dei libri
    biblioteca.restituisciPrestito(lettore1, libro1);
    biblioteca.restituisciPrestito(lettore2, libro2);
    // Rielenchiamo i libri in prestito, così si vede l' aggiornamento
    console.log(biblioteca.elencoLibriInPrestito());

    function aggiungiLibro() {
        let titolo = document.getElementById("inputTitolo").value;
        let autore = document.getElementById("inputAutore").value;
        let genere = document.getElementById("inputGenere").value;
        let annoDiPubblicazione = document.getElementById("inputAnnoDiPubblicazione").value; 
        let output = document.getElementById("output");
        
        libro = new Libro(titolo, autore, genere, annoDiPubblicazione, true);
        biblioteca.aggiungiLibro(libro);
    }
    function elencoLibriInPrestito() {
        let stringa = "";
        let i = 0;

        stringa += `<b>Libri in prestito: </b>`;
        stringa += `<br>`;
        while(i < biblioteca.prestitiAttuali.length) {
            stringa += `${biblioteca.prestitiAttuali[i].libro.titolo}</br>`;
            i++;
        }
        output.innerHTML = stringa;
    }
    function getLibri() {
        
    }


</script>
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
</body>
</html>
